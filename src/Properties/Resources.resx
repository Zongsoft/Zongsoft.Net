<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>

  <data name="Text.AnExceptionOccurredOnRun" xml:space="preserve">
    <value>在运行过程中发生了一个异常：</value>
  </data>

  <data name="Text.Communication.Client.Options.Address" xml:space="preserve">
    <value>远程服务器的网络端点。</value>
  </data>
  <data name="Text.Communication.ClientCommand.Description" xml:space="preserve">
    <value>提供网络客户端各种操作的宿主命令。</value>
  </data>
  <data name="Text.Communication.ClientCommand.Title" xml:space="preserve">
    <value>网络客户端命令</value>
  </data>
  <data name="Text.Communication.ClientStatusCommand.Description" xml:space="preserve">
    <value>查看当前网络客户端的运行参数及状态信息。</value>
  </data>
  <data name="Text.Communication.ClientStatusCommand.Title" xml:space="preserve">
    <value>网络客户端状态命令</value>
  </data>
  <data name="Text.Communication.SendCommand.Channel" xml:space="preserve">
    <value>#{0}通道，{1}</value>
  </data>
  <data name="Text.Communication.SendCommand.Description" xml:space="preserve">
    <value>1、以异步的方式进行网络发送，可通过type选项来指定发送的数据类型。如果发送的是文本则可以通过encoding选项来指定文本的编码方式。
2、选项encoding的值为编码方式名称，譬如：ascii,utf7,utf8,utf-8,utf32,unicode,bigend,bigendian,gb2312...</value>
  </data>
  <data name="Text.Communication.SendCommand.Options.Type" xml:space="preserve">
    <value>发送数据的类型，可以为文件(文件夹)或者字符串。</value>
  </data>
  <data name="Text.Communication.SendCommand.PrepareSendFiles" xml:space="preserve">
    <value>发送“{0}”目录中的{1}个文件：</value>
  </data>
  <data name="Text.Communication.SendCommand.SendCompleted" xml:space="preserve">
    <value>总计发送{0}项数据，其中失败{1}项。</value>
  </data>
  <data name="Text.Communication.SendCommand.SendFailed" xml:space="preserve">
    <value>{0} 发送失败。</value>
  </data>
  <data name="Text.Communication.SendCommand.SendSucceed" xml:space="preserve">
    <value>{0} 发送成功。</value>
  </data>
  <data name="Text.Communication.SendCommand.Title" xml:space="preserve">
    <value>发送命令</value>
  </data>
  <data name="Text.Communication.ServerCommand.Description" xml:space="preserve">
    <value>提供网络服务器各种操作的宿主命令。</value>
  </data>
  <data name="Text.Communication.ServerCommand.Options.Channel" xml:space="preserve">
    <value>当前操作的通道编号，指定的通道必须存在并且是活动的。</value>
  </data>
  <data name="Text.Communication.ServerCommand.Title" xml:space="preserve">
    <value>网络服务器命令</value>
  </data>
  <data name="Text.Communication.ServerStartCommand.Description" xml:space="preserve">
    <value>启动当前服务器。</value>
  </data>
  <data name="Text.Communication.ServerStartCommand.Title" xml:space="preserve">
    <value>服务器启动命令</value>
  </data>
  <data name="Text.Communication.ServerStatusCommand.Description" xml:space="preserve">
    <value>查看当前服务器的运行参数及状态信息。</value>
  </data>
  <data name="Text.Communication.ServerStatusCommand.Title" xml:space="preserve">
    <value>服务器状态命令</value>
  </data>
  <data name="Text.Communication.ServerStopCommand.Description" xml:space="preserve">
    <value>停止当前服务器。</value>
  </data>
  <data name="Text.Communication.ServerStopCommand.Title" xml:space="preserve">
    <value>服务器停止命令</value>
  </data>

  <data name="Text.ContentType.File" xml:space="preserve">
    <value>文件。</value>
  </data>
  <data name="Text.ContentType.Text" xml:space="preserve">
    <value>文本字符。</value>
  </data>
  <data name="Text.Disabled" xml:space="preserve">
    <value>已禁用</value>
  </data>
  <data name="Text.FileOrDirectoryNotExists" xml:space="preserve">
    <value>{0}文件或目录是不存在的。</value>
  </data>

  <data name="Text.IsConnected" xml:space="preserve">
    <value>是否已经连接</value>
  </data>
  <data name="Text.LastConnectTime" xml:space="preserve">
    <value>最后连接时间</value>
  </data>
  <data name="Text.LastReceivedTime" xml:space="preserve">
    <value>最后接收时间</value>
  </data>
  <data name="Text.LastSendTime" xml:space="preserve">
    <value>最后发送时间</value>
  </data>
  <data name="Text.LocalEndPoint" xml:space="preserve">
    <value>本地网络端点</value>
  </data>
  <data name="Text.RemoteEndPoint" xml:space="preserve">
    <value>远程网络端点</value>
  </data>

  <data name="Text.ServerHasBeenStarted" xml:space="preserve">
    <value>服务器已经启动。</value>
  </data>

  <data name="Text.TcpClientConnectCommand.Options.Async" xml:space="preserve">
    <value>指示是否以异步方式连接。</value>
  </data>
  <data name="Text.ThisFile" xml:space="preserve">
    <value>“{0}”文件，大小：{1}</value>
  </data>
  <data name="Text.ThisText" xml:space="preserve">
    <value>“{0}”文本</value>
  </data>
  <data name="Text.No" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="Text.Yes" xml:space="preserve">
    <value>是</value>
  </data>
</root>